CREATE TABLE IF NOT EXISTS sets(
id INTEGER PRIMARY KEY AUTOINCREMENT , 
name TEXT NOT NULL, 
description TEXT,
created_at DATETIME DEFAULT CURRENT_TIMESTAMP, 
updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS flashcards(
id INTEGER PRIMARY KEY AUTOINCREMENT , 
set_id INTEGER NOT NULL, 
question TEXT NOT NULL, 
solution TEXT NOT NULL,
FOREIGN KEY (set_id) REFERENCES sets (id)
);

CREATE TABLE IF NOT EXISTS users(
id INTEGER PRIMARY KEY AUTOINCREMENT , 
username TEXT NOT NULL, 
password TEXT NOT NULL, 
email TEXT NOT NULL 
);


CREATE TABLE collections (
  id INTEGER PRIMARY KEY,
  name TEXT NOT NULL,
  user_id INTEGER,
  set_id INTEGER,
  FOREIGN KEY (user_id) REFERENCES users(id),
  FOREIGN KEY (set_id) REFERENCES sets(id)
);


CREATE TABLE IF NOT EXISTS users(
id INTEGER PRIMARY KEY AUTOINCREMENT , 
username TEXT NOT NULL, 
password TEXT NOT NULL, 
email TEXT NOT NULL 
);

CREATE TABLE reviews(
id INTEGER PRIMARY KEY AUTOINCREMENT,
users_id INTEGER,
sets_id INTEGER,
rating INTEGER CHECK(rating BETWEEN 1 AND 5),
comment Text,
created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (users_id) REFERENCES users(id),
FOREIGN KEY (sets_id) REFERENCES sets(id)
);

CREATE TABLE telemetry (
  id INTEGER PRIMARY KEY,
  timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
  event_type TEXT,
  user_id INTEGER,
  additional_info TEXT,
FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS admin_settings (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    daily_limit INTEGER DEFAULT 20
);